/* Generated By:JJTree: Do not edit this line. ASTBasicExpr.java Version 7.0 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package analyzer.ast;

import java.util.ArrayList;

public
class ASTBasicExpr extends SimpleNode {
  public ASTBasicExpr(int id) {
    super(id);
  }
  public ASTBasicExpr(ASTBasicExpr bExpr){super(bExpr.getId());
    this.parser = bExpr.parser;
  }
  public ASTBasicExpr(Parser p, int id) {
    super(p, id);
  }


  /** Accept the visitor. **/
  public Object jjtAccept(ParserVisitor visitor, Object data) {

    return
    visitor.visit(this, data);
  }

  public ArrayList<String> reduce(){

    if(this.jjtGetNumChildren() ==1) {
      if (this.jjtGetChild(0) instanceof ASTIntValue) {
        ASTIntValue temp = (ASTIntValue) this.jjtGetChild(0);
        return temp.reduce();
      } else if (this.jjtGetChild(0) instanceof ASTIdentifier) {
        ASTIdentifier temp = (ASTIdentifier) this.jjtGetChild(0);
        return temp.reduce();
      }else if(this.jjtGetChild(0) instanceof ASTAddExpr) {//AddExpr
          ASTAddExpr temp = (ASTAddExpr)this.jjtGetChild(0);
          return temp.reduce();
      }
      else{
          return new ArrayList<String>(); //TODO
      }
    }
    else{
      return new ArrayList<String>(); //TODO
    }


  }

}
/* JavaCC - OriginalChecksum=f439016912dced2defe803b80e2c1dd2 (do not edit this line) */
