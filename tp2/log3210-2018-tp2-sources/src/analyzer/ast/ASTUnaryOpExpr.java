/* Generated By:JJTree: Do not edit this line. ASTUnaryOpExpr.java Version 7.0 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package analyzer.ast;

import java.util.ArrayList;
import java.util.Vector; // PLB

public
class ASTUnaryOpExpr extends SimpleNode {
  public ASTUnaryOpExpr(int id) {
    super(id);
  }
  public ASTUnaryOpExpr(ASTUnaryOpExpr uOpExpr){super(uOpExpr.getId());}
  public ASTUnaryOpExpr(Parser p, int id) {
    super(p, id);
  }


  /** Accept the visitor. **/
  public Object jjtAccept(ParserVisitor visitor, Object data) {

    return
    visitor.visit(this, data);
  }

    public ArrayList<String> reduce(){
        ArrayList<String> s = new ArrayList<>();
        if(this.jjtGetChild(0) instanceof  ASTBasicExpr) {
            ASTBasicExpr temp = (ASTBasicExpr)this.jjtGetChild(0);
            if (this.m_ops.size() % 2 == 0) return temp.reduce();

            s.add("-");
            s.addAll(temp.reduce());
        }
        return s;
    }

  // PLB
  private Vector<String> m_ops = new Vector<>();
  public void addOp(String o) { m_ops.add(o); }
  public Vector getOps() { return m_ops; }
}
/* JavaCC - OriginalChecksum=b0bc9dd8edfe4f3c8a086e3dc24afcde (do not edit this line) */
